重启 Network-Manager 服务
sudo service network-manager restart

补依赖
sudo apt install -f

查看电脑的NVIDIA型号
lspci | grep -i nvidia

查看 CUDA 版本
cat /usr/local/cuda/version.txt

https://www.cnblogs.com/yhjoker/p/10972795.html
Pytorch 使用不同版本的 cuda

查看安装的 Pytorch 的信息
conda list | grep pytorch    

anaconda中使用conda 安装 torchvision
conda install torchvision==0.8.2 -c pytorch

Requirements
    Ubuntu 18.04
    Python 3.8.3
    PyTorch 1.7.1
    torchvision 0.8.2
    CUDA 11.0.207
    CMake 3.21.0
    APEX
    spconv
    
cuDNN install   
2.3. 在 Linux 上安装
以下步骤描述了如何构建 cuDNN 依赖程序。选择满足您环境需要的安装方法。例如，tar 文件安装适用于所有 Linux 平台。Debian 安装包适用于 Ubuntu 16.04、18.04 和 20.04。
关于这个任务
在以下部分：
您的CUDA目录路径称为 /usr/local/cuda/
您的cuDNN下载路径称为 <cudnnpath>
2.3.1. tar 文件安装
在发出以下命令之前，您需要替换 xx 和 v8.xxx使用您的特定CUDA和cuDNN版本和包日期。
程序
导航到您的 <cudnnpath>包含cuDNN tar 文件的目录。
解压缩cuDNN包。
$ tar -xzvf cudnn-x.x-linux-x64-v8.x.x.x.tgz
或者

$ tar -xzvf cudnn-x.x-linux-aarch64sbsa-v8.x.x.x.tgz
将以下文件复制到CUDA Toolkit目录中。
$ sudo cp cuda/include/cudnn*.h /usr/local/cuda/include 
$ sudo cp -P cuda/lib64/libcudnn* /usr/local/cuda/lib64 
$ sudo chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*


2.4. 在 Linux 上验证安装
要验证cuDNN是否已安装并正常运行，请编译MNISTCUDNN 样本位于 /usr/src/cudnn_samples_v8 Debian 文件中的目录。
程序
将cuDNN样本复制到可写路径。
$cp -r /usr/src/cudnn_samples_v8/ $HOME
转到可写路径。
$ cd  $HOME/cudnn_samples_v8/mnistCUDNN
编译 MNISTCUDNN 样本。
$make clean && make
跑过 MNISTCUDNN 样本。
$ ./mnistCUDNN
如果cuDNN已正确安装并在您的 Linux 系统上运行，您将看到类似于以下内容的消息：
Test passed!

2.5. 从 cuDNN 7.xx 升级到 cuDNN 8.xx
由于版本 8 可以与以前版本的 cuDNN 共存，如果用户有旧版本的 cuDNN，例如 v6 或 v7，安装版本 8 不会自动删除旧版本。因此，如果用户想要最新版本，请按照安装步骤安装 cuDNN 版本 8。
关于这个任务
要从 cuDNN v7 升级到 v8，请参阅包管理器安装部分并按照适用于您的操作系统的步骤进行操作。

要在 v7 和 v8 安装之间切换，请发出 须藤更新替代品 --config libcudnn 并选择合适的 cuDNN 版本。


#在当前路径下编译.cpp文件：

g++ -o hello hello.cpp

编译完成后可以看到在和hello.cpp相同目录下有一个hello的可执行文件。

在当前路径下运行编译后的可执行文件：

./hello
（注意一定要加上路径才能运行，点表示当前路径。直接hello不添加路径，不能运行）
